-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity avg_ap_fixed_12_4_0_0_0_8_s is
port (
    ap_ready : OUT STD_LOGIC;
    x_0_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    x_1_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    x_2_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    x_3_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    x_4_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    x_5_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    x_6_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    x_7_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (8 downto 0) );
end;


architecture behav of avg_ap_fixed_12_4_0_0_0_8_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal zext_ln703_716_fu_92_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln703_fu_88_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln703_fu_96_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln703_717_fu_102_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln703_718_fu_106_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_5565_fu_110_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln703_719_fu_116_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_5566_fu_120_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln703_720_fu_126_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_4_V_read_cast_cast_fu_84_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln703_5567_fu_130_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_5_V_read_cast_cast_fu_80_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln703_5568_fu_136_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_6_V_read_cast_cast_fu_76_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln703_5569_fu_142_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_7_V_read_cast_cast_fu_72_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln703_5570_fu_148_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_fu_154_p4 : STD_LOGIC_VECTOR (7 downto 0);


begin



    add_ln703_5565_fu_110_p2 <= std_logic_vector(unsigned(zext_ln703_717_fu_102_p1) + unsigned(zext_ln703_718_fu_106_p1));
    add_ln703_5566_fu_120_p2 <= std_logic_vector(unsigned(add_ln703_5565_fu_110_p2) + unsigned(zext_ln703_719_fu_116_p1));
    add_ln703_5567_fu_130_p2 <= std_logic_vector(unsigned(zext_ln703_720_fu_126_p1) + unsigned(x_4_V_read_cast_cast_fu_84_p1));
    add_ln703_5568_fu_136_p2 <= std_logic_vector(unsigned(add_ln703_5567_fu_130_p2) + unsigned(x_5_V_read_cast_cast_fu_80_p1));
    add_ln703_5569_fu_142_p2 <= std_logic_vector(unsigned(add_ln703_5568_fu_136_p2) + unsigned(x_6_V_read_cast_cast_fu_76_p1));
    add_ln703_5570_fu_148_p2 <= std_logic_vector(unsigned(add_ln703_5569_fu_142_p2) + unsigned(x_7_V_read_cast_cast_fu_72_p1));
    add_ln703_fu_96_p2 <= std_logic_vector(unsigned(zext_ln703_716_fu_92_p1) + unsigned(zext_ln703_fu_88_p1));
    ap_ready <= ap_const_logic_1;
    ap_return <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_154_p4),9));
    tmp_fu_154_p4 <= add_ln703_5570_fu_148_p2(10 downto 3);
    x_4_V_read_cast_cast_fu_84_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_4_V_read),11));
    x_5_V_read_cast_cast_fu_80_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_5_V_read),11));
    x_6_V_read_cast_cast_fu_76_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_6_V_read),11));
    x_7_V_read_cast_cast_fu_72_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_7_V_read),11));
    zext_ln703_716_fu_92_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_0_V_read),9));
    zext_ln703_717_fu_102_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_fu_96_p2),10));
    zext_ln703_718_fu_106_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_1_V_read),10));
    zext_ln703_719_fu_116_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_3_V_read),10));
    zext_ln703_720_fu_126_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_5566_fu_120_p2),11));
    zext_ln703_fu_88_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_2_V_read),9));
end behav;
