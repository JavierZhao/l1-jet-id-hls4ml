-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity softmax_stable_ap_fixed_ap_fixed_16_6_0_0_0_Softmax_config18_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    res_0_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_0_V_ap_vld : OUT STD_LOGIC;
    res_1_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_1_V_ap_vld : OUT STD_LOGIC;
    res_2_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_2_V_ap_vld : OUT STD_LOGIC;
    res_3_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_3_V_ap_vld : OUT STD_LOGIC;
    res_4_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_4_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of softmax_stable_ap_fixed_ap_fixed_16_6_0_0_0_Softmax_config18_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv10_1FF : STD_LOGIC_VECTOR (9 downto 0) := "0111111111";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv18_1FFFF : STD_LOGIC_VECTOR (17 downto 0) := "011111111111111111";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv18_20000 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv16_7FFF : STD_LOGIC_VECTOR (15 downto 0) := "0111111111111111";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exp_table1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce0 : STD_LOGIC;
    signal exp_table1_q0 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce1 : STD_LOGIC;
    signal exp_table1_q1 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table1_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce2 : STD_LOGIC;
    signal exp_table1_q2 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table1_address3 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce3 : STD_LOGIC;
    signal exp_table1_q3 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table1_address4 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce4 : STD_LOGIC;
    signal exp_table1_q4 : STD_LOGIC_VECTOR (16 downto 0);
    signal invert_table2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal invert_table2_ce0 : STD_LOGIC;
    signal invert_table2_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal y_V_fu_609_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_reg_2239 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_1_fu_643_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_1_reg_2244 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_2_fu_677_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_2_reg_2249 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_3_fu_711_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_3_reg_2254 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_4_fu_745_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_4_reg_2259 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_4_reg_2259_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_res_0_V_reg_2284 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_0_V_reg_2284_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_1_V_reg_2289 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_1_V_reg_2289_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_2_V_reg_2294 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_2_V_reg_2294_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_3_V_reg_2299 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_3_V_reg_2299_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_16_fu_915_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_16_reg_2309 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_4_V_reg_2315 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1118_fu_2184_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal mul_ln1118_reg_2325 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_31_reg_2331 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln2_reg_2337 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_33_reg_2342 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_1069_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_2347 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_fu_1084_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_reg_2352 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_fu_1090_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_reg_2359 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln1118_1_fu_2195_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal mul_ln1118_1_reg_2364 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_37_reg_2370 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_1_reg_2376 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_reg_2381 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_fu_1131_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_reg_2386 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_3_fu_1146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_3_reg_2391 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_1_fu_1152_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_1_reg_2398 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln1118_2_fu_2206_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal mul_ln1118_2_reg_2403 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_43_reg_2409 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_2_reg_2415 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_45_reg_2420 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_4_fu_1193_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_4_reg_2425 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_5_fu_1208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_5_reg_2430 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_2_fu_1214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_2_reg_2437 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln1118_3_fu_2217_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal mul_ln1118_3_reg_2442 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_49_reg_2448 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_3_reg_2454 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_51_reg_2459 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_6_fu_1255_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_6_reg_2464 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_7_fu_1270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_7_reg_2469 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_3_fu_1276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_3_reg_2476 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln1118_4_fu_2228_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal mul_ln1118_4_reg_2481 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_55_reg_2487 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_4_reg_2493 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_57_reg_2498 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_8_fu_1317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_8_reg_2503 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_9_fu_1332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_9_reg_2508 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_4_fu_1338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_4_reg_2515 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln255_fu_753_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln255_1_fu_757_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln255_2_fu_761_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln255_3_fu_765_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln255_4_fu_769_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln265_fu_1025_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal icmp_ln1496_fu_243_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_fu_243_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_fu_243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln66_fu_249_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln66_fu_249_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_1_fu_257_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_1_fu_257_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_1_fu_257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln66_1_fu_263_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln66_1_fu_263_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln66_fu_249_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln66_1_fu_263_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_2_fu_271_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln66_2_fu_277_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_3_fu_285_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_3_fu_285_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_max_V_fu_291_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_fu_299_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_max_V_fu_291_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_fu_299_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln703_1_fu_303_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_fu_307_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_16_fu_321_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_313_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_fu_329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_fu_347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_2_fu_359_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_2_fu_359_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_1_fu_363_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_18_fu_377_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_369_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_1_fu_385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1_fu_403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_3_fu_415_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_3_fu_415_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_2_fu_419_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_20_fu_433_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_425_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_2_fu_441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_2_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_4_fu_471_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_4_fu_471_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_3_fu_475_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_22_fu_489_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_481_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_3_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_3_fu_515_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_5_fu_527_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_5_fu_527_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_4_fu_531_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_24_fu_545_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_537_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_4_fu_553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_4_fu_571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_5_fu_341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_583_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_fu_335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_353_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_593_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_fu_601_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_6_fu_397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_617_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_5_fu_391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_1_fu_409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_2_fu_627_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_1_fu_635_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_7_fu_453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_651_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_6_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_4_fu_661_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_2_fu_669_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_8_fu_509_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_685_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_7_fu_503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_3_fu_521_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_11_fu_695_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_3_fu_703_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_9_fu_565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_719_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_8_fu_559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_4_fu_577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_13_fu_729_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_4_fu_737_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_7_fu_777_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_6_fu_773_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_8_fu_781_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_s_fu_787_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_10_fu_807_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_9_fu_803_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_11_fu_811_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_14_fu_817_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_12_fu_795_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_13_fu_825_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal lhs_V_fu_833_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal rhs_V_fu_837_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_fu_841_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_15_fu_855_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_16_fu_861_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_15_fu_847_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_5_fu_869_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_11_fu_887_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_10_fu_881_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_5_fu_893_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_17_fu_899_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln388_10_fu_907_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal rhs_V_1_fu_930_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal lhs_V_1_fu_927_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_1_fu_934_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_17_fu_923_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_19_fu_948_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_18_fu_953_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_17_fu_940_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_6_fu_961_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_13_fu_979_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_12_fu_973_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_991_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal underflow_1_fu_967_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_6_fu_985_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_19_fu_1001_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_11_fu_1009_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_5_fu_1017_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_2_fu_1060_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_1075_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_fu_1122_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_1137_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_fu_1184_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_1199_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_11_fu_1246_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_1261_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_13_fu_1308_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_1323_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln415_fu_1351_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_fu_1354_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_34_fu_1359_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_1344_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_fu_1367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_fu_1373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_1393_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_fu_1400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_fu_1406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_fu_1387_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_1379_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_fu_1423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_fu_1429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_1_fu_1435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_fu_1411_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_fu_1418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_9_fu_1446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_fu_1452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_7_fu_1458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_10_fu_1464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_fu_1440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_8_fu_1475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_7_fu_1469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_9_fu_1481_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_5_fu_1487_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_5_fu_1495_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln415_1_fu_1519_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_1_fu_1522_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_40_fu_1527_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_1512_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_1_fu_1535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_1_fu_1541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_1561_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_1_fu_1568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_1_fu_1574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_1_fu_1555_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_1547_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_2_fu_1591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_1_fu_1597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_3_fu_1603_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_1_fu_1579_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_1_fu_1586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_1_fu_1614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_1_fu_1620_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_8_fu_1626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_11_fu_1632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_1_fu_1608_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_11_fu_1643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_10_fu_1637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_12_fu_1649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_6_fu_1655_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_6_fu_1663_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln415_2_fu_1687_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_2_fu_1690_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_46_fu_1695_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_1680_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_2_fu_1703_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_2_fu_1709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_fu_1729_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_2_fu_1736_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_2_fu_1742_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_2_fu_1723_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_1715_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_4_fu_1759_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_2_fu_1765_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_5_fu_1771_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_2_fu_1747_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_2_fu_1754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_2_fu_1782_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_2_fu_1788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_9_fu_1794_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_12_fu_1800_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_2_fu_1776_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_14_fu_1811_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_13_fu_1805_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_15_fu_1817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_7_fu_1823_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_7_fu_1831_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln415_3_fu_1855_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_3_fu_1858_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_52_fu_1863_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_1848_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_3_fu_1871_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_3_fu_1877_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_fu_1897_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_3_fu_1904_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_3_fu_1910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_3_fu_1891_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_fu_1883_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_6_fu_1927_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_3_fu_1933_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_7_fu_1939_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_3_fu_1915_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_3_fu_1922_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_3_fu_1950_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_3_fu_1956_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_10_fu_1962_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_13_fu_1968_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_3_fu_1944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_17_fu_1979_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_16_fu_1973_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_18_fu_1985_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_8_fu_1991_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_8_fu_1999_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln415_4_fu_2023_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_4_fu_2026_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_58_fu_2031_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_fu_2016_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_4_fu_2039_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_4_fu_2045_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_fu_2065_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_4_fu_2072_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_4_fu_2078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_4_fu_2059_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_fu_2051_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_8_fu_2095_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_4_fu_2101_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_9_fu_2107_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_4_fu_2083_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_4_fu_2090_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_4_fu_2118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_4_fu_2124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_11_fu_2130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_14_fu_2136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_4_fu_2112_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_20_fu_2147_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_19_fu_2141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_21_fu_2153_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_9_fu_2159_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_9_fu_2167_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_fu_2184_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1118_fu_2184_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1116_fu_1030_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal mul_ln1118_1_fu_2195_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1118_1_fu_2195_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_2_fu_2206_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1118_2_fu_2206_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_3_fu_2217_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1118_3_fu_2217_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_4_fu_2228_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1118_4_fu_2228_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to4 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal mul_ln1118_1_fu_2195_p00 : STD_LOGIC_VECTOR (34 downto 0);
    signal mul_ln1118_2_fu_2206_p00 : STD_LOGIC_VECTOR (34 downto 0);
    signal mul_ln1118_3_fu_2217_p00 : STD_LOGIC_VECTOR (34 downto 0);
    signal mul_ln1118_4_fu_2228_p00 : STD_LOGIC_VECTOR (34 downto 0);
    signal mul_ln1118_fu_2184_p00 : STD_LOGIC_VECTOR (34 downto 0);

    component myproject_mul_mul_17ns_18s_35_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (16 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (34 downto 0) );
    end component;


    component softmax_stable_ap_fixed_ap_fixed_16_6_0_0_0_Softmax_config18_s_exp_table1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address3 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address4 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component softmax_stable_ap_fixed_ap_fixed_16_6_0_0_0_Softmax_config18_s_invert_table2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;



begin
    exp_table1_U : component softmax_stable_ap_fixed_ap_fixed_16_6_0_0_0_Softmax_config18_s_exp_table1
    generic map (
        DataWidth => 17,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => exp_table1_address0,
        ce0 => exp_table1_ce0,
        q0 => exp_table1_q0,
        address1 => exp_table1_address1,
        ce1 => exp_table1_ce1,
        q1 => exp_table1_q1,
        address2 => exp_table1_address2,
        ce2 => exp_table1_ce2,
        q2 => exp_table1_q2,
        address3 => exp_table1_address3,
        ce3 => exp_table1_ce3,
        q3 => exp_table1_q3,
        address4 => exp_table1_address4,
        ce4 => exp_table1_ce4,
        q4 => exp_table1_q4);

    invert_table2_U : component softmax_stable_ap_fixed_ap_fixed_16_6_0_0_0_Softmax_config18_s_invert_table2
    generic map (
        DataWidth => 18,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => invert_table2_address0,
        ce0 => invert_table2_ce0,
        q0 => invert_table2_q0);

    myproject_mul_mul_17ns_18s_35_1_1_U2166 : component myproject_mul_mul_17ns_18s_35_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 18,
        dout_WIDTH => 35)
    port map (
        din0 => mul_ln1118_fu_2184_p0,
        din1 => mul_ln1118_fu_2184_p1,
        dout => mul_ln1118_fu_2184_p2);

    myproject_mul_mul_17ns_18s_35_1_1_U2167 : component myproject_mul_mul_17ns_18s_35_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 18,
        dout_WIDTH => 35)
    port map (
        din0 => mul_ln1118_1_fu_2195_p0,
        din1 => mul_ln1118_1_fu_2195_p1,
        dout => mul_ln1118_1_fu_2195_p2);

    myproject_mul_mul_17ns_18s_35_1_1_U2168 : component myproject_mul_mul_17ns_18s_35_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 18,
        dout_WIDTH => 35)
    port map (
        din0 => mul_ln1118_2_fu_2206_p0,
        din1 => mul_ln1118_2_fu_2206_p1,
        dout => mul_ln1118_2_fu_2206_p2);

    myproject_mul_mul_17ns_18s_35_1_1_U2169 : component myproject_mul_mul_17ns_18s_35_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 18,
        dout_WIDTH => 35)
    port map (
        din0 => mul_ln1118_3_fu_2217_p0,
        din1 => mul_ln1118_3_fu_2217_p1,
        dout => mul_ln1118_3_fu_2217_p2);

    myproject_mul_mul_17ns_18s_35_1_1_U2170 : component myproject_mul_mul_17ns_18s_35_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 18,
        dout_WIDTH => 35)
    port map (
        din0 => mul_ln1118_4_fu_2228_p0,
        din1 => mul_ln1118_4_fu_2228_p1,
        dout => mul_ln1118_4_fu_2228_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                exp_res_0_V_reg_2284 <= exp_table1_q0;
                exp_res_1_V_reg_2289 <= exp_table1_q1;
                exp_res_2_V_reg_2294 <= exp_table1_q2;
                exp_res_3_V_reg_2299 <= exp_table1_q3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                exp_res_0_V_reg_2284_pp0_iter3_reg <= exp_res_0_V_reg_2284;
                exp_res_1_V_reg_2289_pp0_iter3_reg <= exp_res_1_V_reg_2289;
                exp_res_2_V_reg_2294_pp0_iter3_reg <= exp_res_2_V_reg_2294;
                exp_res_3_V_reg_2299_pp0_iter3_reg <= exp_res_3_V_reg_2299;
                icmp_ln768_1_reg_2398 <= icmp_ln768_1_fu_1152_p2;
                icmp_ln768_2_reg_2437 <= icmp_ln768_2_fu_1214_p2;
                icmp_ln768_3_reg_2476 <= icmp_ln768_3_fu_1276_p2;
                icmp_ln768_4_reg_2515 <= icmp_ln768_4_fu_1338_p2;
                icmp_ln768_reg_2359 <= icmp_ln768_fu_1090_p2;
                icmp_ln879_1_reg_2352 <= icmp_ln879_1_fu_1084_p2;
                icmp_ln879_2_reg_2386 <= icmp_ln879_2_fu_1131_p2;
                icmp_ln879_3_reg_2391 <= icmp_ln879_3_fu_1146_p2;
                icmp_ln879_4_reg_2425 <= icmp_ln879_4_fu_1193_p2;
                icmp_ln879_5_reg_2430 <= icmp_ln879_5_fu_1208_p2;
                icmp_ln879_6_reg_2464 <= icmp_ln879_6_fu_1255_p2;
                icmp_ln879_7_reg_2469 <= icmp_ln879_7_fu_1270_p2;
                icmp_ln879_8_reg_2503 <= icmp_ln879_8_fu_1317_p2;
                icmp_ln879_9_reg_2508 <= icmp_ln879_9_fu_1332_p2;
                icmp_ln879_reg_2347 <= icmp_ln879_fu_1069_p2;
                mul_ln1118_1_reg_2364 <= mul_ln1118_1_fu_2195_p2;
                mul_ln1118_2_reg_2403 <= mul_ln1118_2_fu_2206_p2;
                mul_ln1118_3_reg_2442 <= mul_ln1118_3_fu_2217_p2;
                mul_ln1118_4_reg_2481 <= mul_ln1118_4_fu_2228_p2;
                mul_ln1118_reg_2325 <= mul_ln1118_fu_2184_p2;
                p_Val2_16_reg_2309 <= p_Val2_16_fu_915_p3;
                tmp_31_reg_2331 <= mul_ln1118_fu_2184_p2(34 downto 34);
                tmp_33_reg_2342 <= mul_ln1118_fu_2184_p2(9 downto 9);
                tmp_37_reg_2370 <= mul_ln1118_1_fu_2195_p2(34 downto 34);
                tmp_39_reg_2381 <= mul_ln1118_1_fu_2195_p2(9 downto 9);
                tmp_43_reg_2409 <= mul_ln1118_2_fu_2206_p2(34 downto 34);
                tmp_45_reg_2420 <= mul_ln1118_2_fu_2206_p2(9 downto 9);
                tmp_49_reg_2448 <= mul_ln1118_3_fu_2217_p2(34 downto 34);
                tmp_51_reg_2459 <= mul_ln1118_3_fu_2217_p2(9 downto 9);
                tmp_55_reg_2487 <= mul_ln1118_4_fu_2228_p2(34 downto 34);
                tmp_57_reg_2498 <= mul_ln1118_4_fu_2228_p2(9 downto 9);
                trunc_ln2_reg_2337 <= mul_ln1118_fu_2184_p2(25 downto 10);
                trunc_ln708_1_reg_2376 <= mul_ln1118_1_fu_2195_p2(25 downto 10);
                trunc_ln708_2_reg_2415 <= mul_ln1118_2_fu_2206_p2(25 downto 10);
                trunc_ln708_3_reg_2454 <= mul_ln1118_3_fu_2217_p2(25 downto 10);
                trunc_ln708_4_reg_2493 <= mul_ln1118_4_fu_2228_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                exp_res_4_V_reg_2315 <= exp_table1_q4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                y_V_1_reg_2244 <= y_V_1_fu_643_p3;
                y_V_2_reg_2249 <= y_V_2_fu_677_p3;
                y_V_3_reg_2254 <= y_V_3_fu_711_p3;
                y_V_4_reg_2259 <= y_V_4_fu_745_p3;
                y_V_4_reg_2259_pp0_iter1_reg <= y_V_4_reg_2259;
                y_V_reg_2239 <= y_V_fu_609_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln415_1_fu_1522_p2 <= std_logic_vector(unsigned(zext_ln415_1_fu_1519_p1) + unsigned(trunc_ln708_1_reg_2376));
    add_ln415_2_fu_1690_p2 <= std_logic_vector(unsigned(zext_ln415_2_fu_1687_p1) + unsigned(trunc_ln708_2_reg_2415));
    add_ln415_3_fu_1858_p2 <= std_logic_vector(unsigned(zext_ln415_3_fu_1855_p1) + unsigned(trunc_ln708_3_reg_2454));
    add_ln415_4_fu_2026_p2 <= std_logic_vector(unsigned(zext_ln415_4_fu_2023_p1) + unsigned(trunc_ln708_4_reg_2493));
    add_ln415_fu_1354_p2 <= std_logic_vector(unsigned(zext_ln415_fu_1351_p1) + unsigned(trunc_ln2_reg_2337));
    and_ln416_1_fu_1541_p2 <= (xor_ln416_1_fu_1535_p2 and tmp_38_fu_1512_p3);
    and_ln416_2_fu_1709_p2 <= (xor_ln416_2_fu_1703_p2 and tmp_44_fu_1680_p3);
    and_ln416_3_fu_1877_p2 <= (xor_ln416_3_fu_1871_p2 and tmp_50_fu_1848_p3);
    and_ln416_4_fu_2045_p2 <= (xor_ln416_4_fu_2039_p2 and tmp_56_fu_2016_p3);
    and_ln416_fu_1373_p2 <= (xor_ln416_fu_1367_p2 and tmp_32_fu_1344_p3);
    and_ln779_1_fu_1574_p2 <= (xor_ln779_1_fu_1568_p2 and icmp_ln879_2_reg_2386);
    and_ln779_2_fu_1742_p2 <= (xor_ln779_2_fu_1736_p2 and icmp_ln879_4_reg_2425);
    and_ln779_3_fu_1910_p2 <= (xor_ln779_3_fu_1904_p2 and icmp_ln879_6_reg_2464);
    and_ln779_4_fu_2078_p2 <= (xor_ln779_4_fu_2072_p2 and icmp_ln879_8_reg_2503);
    and_ln779_fu_1406_p2 <= (xor_ln779_fu_1400_p2 and icmp_ln879_reg_2347);
    and_ln781_1_fu_1586_p2 <= (icmp_ln879_3_reg_2391 and and_ln416_1_fu_1541_p2);
    and_ln781_2_fu_1754_p2 <= (icmp_ln879_5_reg_2430 and and_ln416_2_fu_1709_p2);
    and_ln781_3_fu_1922_p2 <= (icmp_ln879_7_reg_2469 and and_ln416_3_fu_1877_p2);
    and_ln781_4_fu_2090_p2 <= (icmp_ln879_9_reg_2508 and and_ln416_4_fu_2045_p2);
    and_ln781_fu_1418_p2 <= (icmp_ln879_1_reg_2352 and and_ln416_fu_1373_p2);
    and_ln785_1_fu_1608_p2 <= (xor_ln785_3_fu_1603_p2 and or_ln785_1_fu_1597_p2);
    and_ln785_2_fu_1776_p2 <= (xor_ln785_5_fu_1771_p2 and or_ln785_2_fu_1765_p2);
    and_ln785_3_fu_1944_p2 <= (xor_ln785_7_fu_1939_p2 and or_ln785_3_fu_1933_p2);
    and_ln785_4_fu_2112_p2 <= (xor_ln785_9_fu_2107_p2 and or_ln785_4_fu_2101_p2);
    and_ln785_fu_1440_p2 <= (xor_ln785_1_fu_1435_p2 and or_ln785_fu_1429_p2);
    and_ln786_10_fu_1464_p2 <= (xor_ln786_7_fu_1458_p2 and tmp_31_reg_2331);
    and_ln786_11_fu_1632_p2 <= (xor_ln786_8_fu_1626_p2 and tmp_37_reg_2370);
    and_ln786_12_fu_1800_p2 <= (xor_ln786_9_fu_1794_p2 and tmp_43_reg_2409);
    and_ln786_13_fu_1968_p2 <= (xor_ln786_10_fu_1962_p2 and tmp_49_reg_2448);
    and_ln786_14_fu_2136_p2 <= (xor_ln786_11_fu_2130_p2 and tmp_55_reg_2487);
    and_ln786_1_fu_1614_p2 <= (tmp_41_fu_1547_p3 and select_ln416_1_fu_1579_p3);
    and_ln786_2_fu_1782_p2 <= (tmp_47_fu_1715_p3 and select_ln416_2_fu_1747_p3);
    and_ln786_3_fu_1950_p2 <= (tmp_53_fu_1883_p3 and select_ln416_3_fu_1915_p3);
    and_ln786_4_fu_2118_p2 <= (tmp_59_fu_2051_p3 and select_ln416_4_fu_2083_p3);
    and_ln786_5_fu_391_p2 <= (xor_ln786_1_fu_385_p2 and tmp_17_fu_369_p3);
    and_ln786_6_fu_447_p2 <= (xor_ln786_2_fu_441_p2 and tmp_19_fu_425_p3);
    and_ln786_7_fu_503_p2 <= (xor_ln786_3_fu_497_p2 and tmp_21_fu_481_p3);
    and_ln786_8_fu_559_p2 <= (xor_ln786_4_fu_553_p2 and tmp_23_fu_537_p3);
    and_ln786_9_fu_1446_p2 <= (tmp_35_fu_1379_p3 and select_ln416_fu_1411_p3);
    and_ln786_fu_335_p2 <= (xor_ln786_fu_329_p2 and tmp_15_fu_313_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to4_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to4 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to4)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to4 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    exp_table1_address0 <= zext_ln255_fu_753_p1(10 - 1 downto 0);
    exp_table1_address1 <= zext_ln255_1_fu_757_p1(10 - 1 downto 0);
    exp_table1_address2 <= zext_ln255_2_fu_761_p1(10 - 1 downto 0);
    exp_table1_address3 <= zext_ln255_3_fu_765_p1(10 - 1 downto 0);
    exp_table1_address4 <= zext_ln255_4_fu_769_p1(10 - 1 downto 0);

    exp_table1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            exp_table1_ce0 <= ap_const_logic_1;
        else 
            exp_table1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            exp_table1_ce1 <= ap_const_logic_1;
        else 
            exp_table1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_ce2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            exp_table1_ce2 <= ap_const_logic_1;
        else 
            exp_table1_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_ce3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            exp_table1_ce3 <= ap_const_logic_1;
        else 
            exp_table1_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_ce4_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            exp_table1_ce4 <= ap_const_logic_1;
        else 
            exp_table1_ce4 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1496_1_fu_257_p0 <= data_2_V_read;
    icmp_ln1496_1_fu_257_p1 <= data_3_V_read;
    icmp_ln1496_1_fu_257_p2 <= "1" when (signed(icmp_ln1496_1_fu_257_p0) < signed(icmp_ln1496_1_fu_257_p1)) else "0";
    icmp_ln1496_2_fu_271_p2 <= "1" when (signed(select_ln66_fu_249_p3) < signed(select_ln66_1_fu_263_p3)) else "0";
    icmp_ln1496_3_fu_285_p1 <= data_4_V_read;
    icmp_ln1496_3_fu_285_p2 <= "1" when (signed(select_ln66_2_fu_277_p3) < signed(icmp_ln1496_3_fu_285_p1)) else "0";
    icmp_ln1496_fu_243_p0 <= data_0_V_read;
    icmp_ln1496_fu_243_p1 <= data_1_V_read;
    icmp_ln1496_fu_243_p2 <= "1" when (signed(icmp_ln1496_fu_243_p0) < signed(icmp_ln1496_fu_243_p1)) else "0";
    icmp_ln768_1_fu_1152_p2 <= "1" when (tmp_6_fu_1137_p4 = ap_const_lv9_0) else "0";
    icmp_ln768_2_fu_1214_p2 <= "1" when (tmp_10_fu_1199_p4 = ap_const_lv9_0) else "0";
    icmp_ln768_3_fu_1276_p2 <= "1" when (tmp_12_fu_1261_p4 = ap_const_lv9_0) else "0";
    icmp_ln768_4_fu_1338_p2 <= "1" when (tmp_14_fu_1323_p4 = ap_const_lv9_0) else "0";
    icmp_ln768_fu_1090_p2 <= "1" when (tmp_4_fu_1075_p4 = ap_const_lv9_0) else "0";
    icmp_ln879_1_fu_1084_p2 <= "1" when (tmp_4_fu_1075_p4 = ap_const_lv9_1FF) else "0";
    icmp_ln879_2_fu_1131_p2 <= "1" when (tmp_fu_1122_p4 = ap_const_lv8_FF) else "0";
    icmp_ln879_3_fu_1146_p2 <= "1" when (tmp_6_fu_1137_p4 = ap_const_lv9_1FF) else "0";
    icmp_ln879_4_fu_1193_p2 <= "1" when (tmp_8_fu_1184_p4 = ap_const_lv8_FF) else "0";
    icmp_ln879_5_fu_1208_p2 <= "1" when (tmp_10_fu_1199_p4 = ap_const_lv9_1FF) else "0";
    icmp_ln879_6_fu_1255_p2 <= "1" when (tmp_11_fu_1246_p4 = ap_const_lv8_FF) else "0";
    icmp_ln879_7_fu_1270_p2 <= "1" when (tmp_12_fu_1261_p4 = ap_const_lv9_1FF) else "0";
    icmp_ln879_8_fu_1317_p2 <= "1" when (tmp_13_fu_1308_p4 = ap_const_lv8_FF) else "0";
    icmp_ln879_9_fu_1332_p2 <= "1" when (tmp_14_fu_1323_p4 = ap_const_lv9_1FF) else "0";
    icmp_ln879_fu_1069_p2 <= "1" when (tmp_2_fu_1060_p4 = ap_const_lv8_FF) else "0";
    invert_table2_address0 <= zext_ln265_fu_1025_p1(10 - 1 downto 0);

    invert_table2_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            invert_table2_ce0 <= ap_const_logic_1;
        else 
            invert_table2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

        lhs_V_1_fu_927_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_16_reg_2309),19));

        lhs_V_fu_833_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_12_fu_795_p3),19));

    mul_ln1118_1_fu_2195_p0 <= mul_ln1118_1_fu_2195_p00(17 - 1 downto 0);
    mul_ln1118_1_fu_2195_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_1_V_reg_2289_pp0_iter3_reg),35));
    mul_ln1118_1_fu_2195_p1 <= sext_ln1116_fu_1030_p1(18 - 1 downto 0);
    mul_ln1118_2_fu_2206_p0 <= mul_ln1118_2_fu_2206_p00(17 - 1 downto 0);
    mul_ln1118_2_fu_2206_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_2_V_reg_2294_pp0_iter3_reg),35));
    mul_ln1118_2_fu_2206_p1 <= sext_ln1116_fu_1030_p1(18 - 1 downto 0);
    mul_ln1118_3_fu_2217_p0 <= mul_ln1118_3_fu_2217_p00(17 - 1 downto 0);
    mul_ln1118_3_fu_2217_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_3_V_reg_2299_pp0_iter3_reg),35));
    mul_ln1118_3_fu_2217_p1 <= sext_ln1116_fu_1030_p1(18 - 1 downto 0);
    mul_ln1118_4_fu_2228_p0 <= mul_ln1118_4_fu_2228_p00(17 - 1 downto 0);
    mul_ln1118_4_fu_2228_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_4_V_reg_2315),35));
    mul_ln1118_4_fu_2228_p1 <= sext_ln1116_fu_1030_p1(18 - 1 downto 0);
    mul_ln1118_fu_2184_p0 <= mul_ln1118_fu_2184_p00(17 - 1 downto 0);
    mul_ln1118_fu_2184_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_0_V_reg_2284_pp0_iter3_reg),35));
    mul_ln1118_fu_2184_p1 <= sext_ln1116_fu_1030_p1(18 - 1 downto 0);
    or_ln340_10_fu_1637_p2 <= (and_ln786_11_fu_1632_p2 or and_ln785_1_fu_1608_p2);
    or_ln340_11_fu_1643_p2 <= (xor_ln785_3_fu_1603_p2 or and_ln786_1_fu_1614_p2);
    or_ln340_12_fu_1649_p2 <= (or_ln340_11_fu_1643_p2 or and_ln781_1_fu_1586_p2);
    or_ln340_13_fu_1805_p2 <= (and_ln786_12_fu_1800_p2 or and_ln785_2_fu_1776_p2);
    or_ln340_14_fu_1811_p2 <= (xor_ln785_5_fu_1771_p2 or and_ln786_2_fu_1782_p2);
    or_ln340_15_fu_1817_p2 <= (or_ln340_14_fu_1811_p2 or and_ln781_2_fu_1754_p2);
    or_ln340_16_fu_1973_p2 <= (and_ln786_13_fu_1968_p2 or and_ln785_3_fu_1944_p2);
    or_ln340_17_fu_1979_p2 <= (xor_ln785_7_fu_1939_p2 or and_ln786_3_fu_1950_p2);
    or_ln340_18_fu_1985_p2 <= (or_ln340_17_fu_1979_p2 or and_ln781_3_fu_1922_p2);
    or_ln340_19_fu_2141_p2 <= (and_ln786_14_fu_2136_p2 or and_ln785_4_fu_2112_p2);
    or_ln340_1_fu_409_p2 <= (xor_ln340_1_fu_403_p2 or tmp_18_fu_377_p3);
    or_ln340_20_fu_2147_p2 <= (xor_ln785_9_fu_2107_p2 or and_ln786_4_fu_2118_p2);
    or_ln340_21_fu_2153_p2 <= (or_ln340_20_fu_2147_p2 or and_ln781_4_fu_2090_p2);
    or_ln340_2_fu_465_p2 <= (xor_ln340_2_fu_459_p2 or tmp_20_fu_433_p3);
    or_ln340_3_fu_521_p2 <= (xor_ln340_3_fu_515_p2 or tmp_22_fu_489_p3);
    or_ln340_4_fu_577_p2 <= (xor_ln340_4_fu_571_p2 or tmp_24_fu_545_p3);
    or_ln340_5_fu_893_p2 <= (xor_ln340_11_fu_887_p2 or p_Result_16_fu_861_p3);
    or_ln340_6_fu_985_p2 <= (xor_ln340_13_fu_979_p2 or p_Result_18_fu_953_p3);
    or_ln340_7_fu_1469_p2 <= (and_ln786_10_fu_1464_p2 or and_ln785_fu_1440_p2);
    or_ln340_8_fu_1475_p2 <= (xor_ln785_1_fu_1435_p2 or and_ln786_9_fu_1446_p2);
    or_ln340_9_fu_1481_p2 <= (or_ln340_8_fu_1475_p2 or and_ln781_fu_1418_p2);
    or_ln340_fu_353_p2 <= (xor_ln340_fu_347_p2 or tmp_16_fu_321_p3);
    or_ln785_1_fu_1597_p2 <= (xor_ln785_2_fu_1591_p2 or tmp_41_fu_1547_p3);
    or_ln785_2_fu_1765_p2 <= (xor_ln785_4_fu_1759_p2 or tmp_47_fu_1715_p3);
    or_ln785_3_fu_1933_p2 <= (xor_ln785_6_fu_1927_p2 or tmp_53_fu_1883_p3);
    or_ln785_4_fu_2101_p2 <= (xor_ln785_8_fu_2095_p2 or tmp_59_fu_2051_p3);
    or_ln785_fu_1429_p2 <= (xor_ln785_fu_1423_p2 or tmp_35_fu_1379_p3);
    or_ln786_1_fu_1620_p2 <= (and_ln786_1_fu_1614_p2 or and_ln781_1_fu_1586_p2);
    or_ln786_2_fu_1788_p2 <= (and_ln786_2_fu_1782_p2 or and_ln781_2_fu_1754_p2);
    or_ln786_3_fu_1956_p2 <= (and_ln786_3_fu_1950_p2 or and_ln781_3_fu_1922_p2);
    or_ln786_4_fu_2124_p2 <= (and_ln786_4_fu_2118_p2 or and_ln781_4_fu_2090_p2);
    or_ln786_fu_1452_p2 <= (and_ln786_9_fu_1446_p2 or and_ln781_fu_1418_p2);
    p_Result_14_fu_817_p3 <= p_Val2_11_fu_811_p2(17 downto 17);
    p_Result_15_fu_847_p3 <= ret_V_fu_841_p2(18 downto 18);
    p_Result_16_fu_861_p3 <= p_Val2_15_fu_855_p2(17 downto 17);
    p_Result_17_fu_940_p3 <= ret_V_1_fu_934_p2(18 downto 18);
    p_Result_18_fu_953_p3 <= p_Val2_19_fu_948_p2(17 downto 17);
    p_Result_s_fu_787_p3 <= p_Val2_8_fu_781_p2(17 downto 17);
    p_Val2_10_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_table1_q3),18));
    p_Val2_11_fu_811_p2 <= std_logic_vector(unsigned(p_Val2_10_fu_807_p1) + unsigned(p_Val2_9_fu_803_p1));
    p_Val2_12_fu_795_p3 <= 
        ap_const_lv18_1FFFF when (p_Result_s_fu_787_p3(0) = '1') else 
        p_Val2_8_fu_781_p2;
    p_Val2_13_fu_825_p3 <= 
        ap_const_lv18_1FFFF when (p_Result_14_fu_817_p3(0) = '1') else 
        p_Val2_11_fu_811_p2;
    p_Val2_15_fu_855_p2 <= std_logic_vector(signed(p_Val2_13_fu_825_p3) + signed(p_Val2_12_fu_795_p3));
    p_Val2_16_fu_915_p3 <= 
        select_ln340_17_fu_899_p3 when (or_ln340_5_fu_893_p2(0) = '1') else 
        select_ln388_10_fu_907_p3;
    p_Val2_17_fu_923_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_table1_q4),18));
    p_Val2_19_fu_948_p2 <= std_logic_vector(signed(p_Val2_16_reg_2309) + signed(p_Val2_17_fu_923_p1));
    p_Val2_6_fu_773_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_table1_q0),18));
    p_Val2_7_fu_777_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_table1_q1),18));
    p_Val2_8_fu_781_p2 <= std_logic_vector(unsigned(p_Val2_7_fu_777_p1) + unsigned(p_Val2_6_fu_773_p1));
    p_Val2_9_fu_803_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_table1_q2),18));
    res_0_V <= 
        select_ln340_5_fu_1487_p3 when (or_ln340_9_fu_1481_p2(0) = '1') else 
        select_ln388_5_fu_1495_p3;

    res_0_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            res_0_V_ap_vld <= ap_const_logic_1;
        else 
            res_0_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    res_1_V <= 
        select_ln340_6_fu_1655_p3 when (or_ln340_12_fu_1649_p2(0) = '1') else 
        select_ln388_6_fu_1663_p3;

    res_1_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            res_1_V_ap_vld <= ap_const_logic_1;
        else 
            res_1_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    res_2_V <= 
        select_ln340_7_fu_1823_p3 when (or_ln340_15_fu_1817_p2(0) = '1') else 
        select_ln388_7_fu_1831_p3;

    res_2_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            res_2_V_ap_vld <= ap_const_logic_1;
        else 
            res_2_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    res_3_V <= 
        select_ln340_8_fu_1991_p3 when (or_ln340_18_fu_1985_p2(0) = '1') else 
        select_ln388_8_fu_1999_p3;

    res_3_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            res_3_V_ap_vld <= ap_const_logic_1;
        else 
            res_3_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    res_4_V <= 
        select_ln340_9_fu_2159_p3 when (or_ln340_21_fu_2153_p2(0) = '1') else 
        select_ln388_9_fu_2167_p3;

    res_4_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            res_4_V_ap_vld <= ap_const_logic_1;
        else 
            res_4_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ret_V_1_fu_934_p2 <= std_logic_vector(unsigned(rhs_V_1_fu_930_p1) + unsigned(lhs_V_1_fu_927_p1));
    ret_V_fu_841_p2 <= std_logic_vector(signed(lhs_V_fu_833_p1) + signed(rhs_V_fu_837_p1));
    rhs_V_1_fu_930_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_table1_q4),19));
        rhs_V_fu_837_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_13_fu_825_p3),19));

    select_ln340_11_fu_695_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_8_fu_509_p2(0) = '1') else 
        tmp_7_fu_685_p4;
    select_ln340_13_fu_729_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_9_fu_565_p2(0) = '1') else 
        tmp_9_fu_719_p4;
    select_ln340_17_fu_899_p3 <= 
        ap_const_lv18_1FFFF when (xor_ln340_10_fu_881_p2(0) = '1') else 
        p_Val2_15_fu_855_p2;
    select_ln340_19_fu_1001_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_12_fu_973_p2(0) = '1') else 
        tmp_s_fu_991_p4;
    select_ln340_2_fu_627_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_6_fu_397_p2(0) = '1') else 
        tmp_3_fu_617_p4;
    select_ln340_4_fu_661_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_7_fu_453_p2(0) = '1') else 
        tmp_5_fu_651_p4;
    select_ln340_5_fu_1487_p3 <= 
        ap_const_lv16_7FFF when (or_ln340_7_fu_1469_p2(0) = '1') else 
        add_ln415_fu_1354_p2;
    select_ln340_6_fu_1655_p3 <= 
        ap_const_lv16_7FFF when (or_ln340_10_fu_1637_p2(0) = '1') else 
        add_ln415_1_fu_1522_p2;
    select_ln340_7_fu_1823_p3 <= 
        ap_const_lv16_7FFF when (or_ln340_13_fu_1805_p2(0) = '1') else 
        add_ln415_2_fu_1690_p2;
    select_ln340_8_fu_1991_p3 <= 
        ap_const_lv16_7FFF when (or_ln340_16_fu_1973_p2(0) = '1') else 
        add_ln415_3_fu_1858_p2;
    select_ln340_9_fu_2159_p3 <= 
        ap_const_lv16_7FFF when (or_ln340_19_fu_2141_p2(0) = '1') else 
        add_ln415_4_fu_2026_p2;
    select_ln340_fu_593_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_5_fu_341_p2(0) = '1') else 
        tmp_1_fu_583_p4;
    select_ln388_10_fu_907_p3 <= 
        ap_const_lv18_20000 when (underflow_fu_875_p2(0) = '1') else 
        p_Val2_15_fu_855_p2;
    select_ln388_11_fu_1009_p3 <= 
        ap_const_lv10_200 when (underflow_1_fu_967_p2(0) = '1') else 
        tmp_s_fu_991_p4;
    select_ln388_1_fu_635_p3 <= 
        ap_const_lv10_200 when (and_ln786_5_fu_391_p2(0) = '1') else 
        tmp_3_fu_617_p4;
    select_ln388_2_fu_669_p3 <= 
        ap_const_lv10_200 when (and_ln786_6_fu_447_p2(0) = '1') else 
        tmp_5_fu_651_p4;
    select_ln388_3_fu_703_p3 <= 
        ap_const_lv10_200 when (and_ln786_7_fu_503_p2(0) = '1') else 
        tmp_7_fu_685_p4;
    select_ln388_4_fu_737_p3 <= 
        ap_const_lv10_200 when (and_ln786_8_fu_559_p2(0) = '1') else 
        tmp_9_fu_719_p4;
    select_ln388_5_fu_1495_p3 <= 
        ap_const_lv16_8000 when (and_ln786_10_fu_1464_p2(0) = '1') else 
        add_ln415_fu_1354_p2;
    select_ln388_6_fu_1663_p3 <= 
        ap_const_lv16_8000 when (and_ln786_11_fu_1632_p2(0) = '1') else 
        add_ln415_1_fu_1522_p2;
    select_ln388_7_fu_1831_p3 <= 
        ap_const_lv16_8000 when (and_ln786_12_fu_1800_p2(0) = '1') else 
        add_ln415_2_fu_1690_p2;
    select_ln388_8_fu_1999_p3 <= 
        ap_const_lv16_8000 when (and_ln786_13_fu_1968_p2(0) = '1') else 
        add_ln415_3_fu_1858_p2;
    select_ln388_9_fu_2167_p3 <= 
        ap_const_lv16_8000 when (and_ln786_14_fu_2136_p2(0) = '1') else 
        add_ln415_4_fu_2026_p2;
    select_ln388_fu_601_p3 <= 
        ap_const_lv10_200 when (and_ln786_fu_335_p2(0) = '1') else 
        tmp_1_fu_583_p4;
    select_ln416_1_fu_1579_p3 <= 
        and_ln779_1_fu_1574_p2 when (and_ln416_1_fu_1541_p2(0) = '1') else 
        icmp_ln879_3_reg_2391;
    select_ln416_2_fu_1747_p3 <= 
        and_ln779_2_fu_1742_p2 when (and_ln416_2_fu_1709_p2(0) = '1') else 
        icmp_ln879_5_reg_2430;
    select_ln416_3_fu_1915_p3 <= 
        and_ln779_3_fu_1910_p2 when (and_ln416_3_fu_1877_p2(0) = '1') else 
        icmp_ln879_7_reg_2469;
    select_ln416_4_fu_2083_p3 <= 
        and_ln779_4_fu_2078_p2 when (and_ln416_4_fu_2045_p2(0) = '1') else 
        icmp_ln879_9_reg_2508;
    select_ln416_fu_1411_p3 <= 
        and_ln779_fu_1406_p2 when (and_ln416_fu_1373_p2(0) = '1') else 
        icmp_ln879_1_reg_2352;
    select_ln66_1_fu_263_p1 <= data_3_V_read;
    select_ln66_1_fu_263_p2 <= data_2_V_read;
    select_ln66_1_fu_263_p3 <= 
        select_ln66_1_fu_263_p1 when (icmp_ln1496_1_fu_257_p2(0) = '1') else 
        select_ln66_1_fu_263_p2;
    select_ln66_2_fu_277_p3 <= 
        select_ln66_1_fu_263_p3 when (icmp_ln1496_2_fu_271_p2(0) = '1') else 
        select_ln66_fu_249_p3;
    select_ln66_fu_249_p1 <= data_1_V_read;
    select_ln66_fu_249_p2 <= data_0_V_read;
    select_ln66_fu_249_p3 <= 
        select_ln66_fu_249_p1 when (icmp_ln1496_fu_243_p2(0) = '1') else 
        select_ln66_fu_249_p2;
    select_ln777_1_fu_1555_p3 <= 
        icmp_ln879_3_reg_2391 when (and_ln416_1_fu_1541_p2(0) = '1') else 
        icmp_ln768_1_reg_2398;
    select_ln777_2_fu_1723_p3 <= 
        icmp_ln879_5_reg_2430 when (and_ln416_2_fu_1709_p2(0) = '1') else 
        icmp_ln768_2_reg_2437;
    select_ln777_3_fu_1891_p3 <= 
        icmp_ln879_7_reg_2469 when (and_ln416_3_fu_1877_p2(0) = '1') else 
        icmp_ln768_3_reg_2476;
    select_ln777_4_fu_2059_p3 <= 
        icmp_ln879_9_reg_2508 when (and_ln416_4_fu_2045_p2(0) = '1') else 
        icmp_ln768_4_reg_2515;
    select_ln777_fu_1387_p3 <= 
        icmp_ln879_1_reg_2352 when (and_ln416_fu_1373_p2(0) = '1') else 
        icmp_ln768_reg_2359;
        sext_ln1116_fu_1030_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(invert_table2_q0),35));

        sext_ln703_1_fu_303_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_max_V_fu_291_p3),17));

    sext_ln703_2_fu_359_p0 <= data_1_V_read;
        sext_ln703_2_fu_359_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_2_fu_359_p0),17));

    sext_ln703_3_fu_415_p0 <= data_2_V_read;
        sext_ln703_3_fu_415_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_3_fu_415_p0),17));

    sext_ln703_4_fu_471_p0 <= data_3_V_read;
        sext_ln703_4_fu_471_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_4_fu_471_p0),17));

    sext_ln703_5_fu_527_p0 <= data_4_V_read;
        sext_ln703_5_fu_527_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_5_fu_527_p0),17));

    sext_ln703_fu_299_p0 <= data_0_V_read;
        sext_ln703_fu_299_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_fu_299_p0),17));

    sub_ln1193_1_fu_363_p2 <= std_logic_vector(signed(sext_ln703_2_fu_359_p1) - signed(sext_ln703_1_fu_303_p1));
    sub_ln1193_2_fu_419_p2 <= std_logic_vector(signed(sext_ln703_3_fu_415_p1) - signed(sext_ln703_1_fu_303_p1));
    sub_ln1193_3_fu_475_p2 <= std_logic_vector(signed(sext_ln703_4_fu_471_p1) - signed(sext_ln703_1_fu_303_p1));
    sub_ln1193_4_fu_531_p2 <= std_logic_vector(signed(sext_ln703_5_fu_527_p1) - signed(sext_ln703_1_fu_303_p1));
    sub_ln1193_fu_307_p2 <= std_logic_vector(signed(sext_ln703_fu_299_p1) - signed(sext_ln703_1_fu_303_p1));
    tmp_10_fu_1199_p4 <= mul_ln1118_2_fu_2206_p2(34 downto 26);
    tmp_11_fu_1246_p4 <= mul_ln1118_3_fu_2217_p2(34 downto 27);
    tmp_12_fu_1261_p4 <= mul_ln1118_3_fu_2217_p2(34 downto 26);
    tmp_13_fu_1308_p4 <= mul_ln1118_4_fu_2228_p2(34 downto 27);
    tmp_14_fu_1323_p4 <= mul_ln1118_4_fu_2228_p2(34 downto 26);
    tmp_15_fu_313_p3 <= sub_ln1193_fu_307_p2(16 downto 16);
    tmp_16_fu_321_p3 <= sub_ln1193_fu_307_p2(15 downto 15);
    tmp_17_fu_369_p3 <= sub_ln1193_1_fu_363_p2(16 downto 16);
    tmp_18_fu_377_p3 <= sub_ln1193_1_fu_363_p2(15 downto 15);
    tmp_19_fu_425_p3 <= sub_ln1193_2_fu_419_p2(16 downto 16);
    tmp_1_fu_583_p4 <= sub_ln1193_fu_307_p2(15 downto 6);
    tmp_20_fu_433_p3 <= sub_ln1193_2_fu_419_p2(15 downto 15);
    tmp_21_fu_481_p3 <= sub_ln1193_3_fu_475_p2(16 downto 16);
    tmp_22_fu_489_p3 <= sub_ln1193_3_fu_475_p2(15 downto 15);
    tmp_23_fu_537_p3 <= sub_ln1193_4_fu_531_p2(16 downto 16);
    tmp_24_fu_545_p3 <= sub_ln1193_4_fu_531_p2(15 downto 15);
    tmp_2_fu_1060_p4 <= mul_ln1118_fu_2184_p2(34 downto 27);
    tmp_32_fu_1344_p3 <= mul_ln1118_reg_2325(25 downto 25);
    tmp_34_fu_1359_p3 <= add_ln415_fu_1354_p2(15 downto 15);
    tmp_35_fu_1379_p3 <= add_ln415_fu_1354_p2(15 downto 15);
    tmp_36_fu_1393_p3 <= mul_ln1118_reg_2325(26 downto 26);
    tmp_38_fu_1512_p3 <= mul_ln1118_1_reg_2364(25 downto 25);
    tmp_3_fu_617_p4 <= sub_ln1193_1_fu_363_p2(15 downto 6);
    tmp_40_fu_1527_p3 <= add_ln415_1_fu_1522_p2(15 downto 15);
    tmp_41_fu_1547_p3 <= add_ln415_1_fu_1522_p2(15 downto 15);
    tmp_42_fu_1561_p3 <= mul_ln1118_1_reg_2364(26 downto 26);
    tmp_44_fu_1680_p3 <= mul_ln1118_2_reg_2403(25 downto 25);
    tmp_46_fu_1695_p3 <= add_ln415_2_fu_1690_p2(15 downto 15);
    tmp_47_fu_1715_p3 <= add_ln415_2_fu_1690_p2(15 downto 15);
    tmp_48_fu_1729_p3 <= mul_ln1118_2_reg_2403(26 downto 26);
    tmp_4_fu_1075_p4 <= mul_ln1118_fu_2184_p2(34 downto 26);
    tmp_50_fu_1848_p3 <= mul_ln1118_3_reg_2442(25 downto 25);
    tmp_52_fu_1863_p3 <= add_ln415_3_fu_1858_p2(15 downto 15);
    tmp_53_fu_1883_p3 <= add_ln415_3_fu_1858_p2(15 downto 15);
    tmp_54_fu_1897_p3 <= mul_ln1118_3_reg_2442(26 downto 26);
    tmp_56_fu_2016_p3 <= mul_ln1118_4_reg_2481(25 downto 25);
    tmp_58_fu_2031_p3 <= add_ln415_4_fu_2026_p2(15 downto 15);
    tmp_59_fu_2051_p3 <= add_ln415_4_fu_2026_p2(15 downto 15);
    tmp_5_fu_651_p4 <= sub_ln1193_2_fu_419_p2(15 downto 6);
    tmp_60_fu_2065_p3 <= mul_ln1118_4_reg_2481(26 downto 26);
    tmp_6_fu_1137_p4 <= mul_ln1118_1_fu_2195_p2(34 downto 26);
    tmp_7_fu_685_p4 <= sub_ln1193_3_fu_475_p2(15 downto 6);
    tmp_8_fu_1184_p4 <= mul_ln1118_2_fu_2206_p2(34 downto 27);
    tmp_9_fu_719_p4 <= sub_ln1193_4_fu_531_p2(15 downto 6);
    tmp_fu_1122_p4 <= mul_ln1118_1_fu_2195_p2(34 downto 27);
    tmp_s_fu_991_p4 <= p_Val2_19_fu_948_p2(17 downto 8);
    underflow_1_fu_967_p2 <= (xor_ln786_6_fu_961_p2 and p_Result_17_fu_940_p3);
    underflow_fu_875_p2 <= (xor_ln786_5_fu_869_p2 and p_Result_15_fu_847_p3);
    x_max_V_fu_291_p1 <= data_4_V_read;
    x_max_V_fu_291_p3 <= 
        x_max_V_fu_291_p1 when (icmp_ln1496_3_fu_285_p2(0) = '1') else 
        select_ln66_2_fu_277_p3;
    xor_ln340_10_fu_881_p2 <= (p_Result_16_fu_861_p3 xor p_Result_15_fu_847_p3);
    xor_ln340_11_fu_887_p2 <= (p_Result_15_fu_847_p3 xor ap_const_lv1_1);
    xor_ln340_12_fu_973_p2 <= (p_Result_18_fu_953_p3 xor p_Result_17_fu_940_p3);
    xor_ln340_13_fu_979_p2 <= (p_Result_17_fu_940_p3 xor ap_const_lv1_1);
    xor_ln340_1_fu_403_p2 <= (tmp_17_fu_369_p3 xor ap_const_lv1_1);
    xor_ln340_2_fu_459_p2 <= (tmp_19_fu_425_p3 xor ap_const_lv1_1);
    xor_ln340_3_fu_515_p2 <= (tmp_21_fu_481_p3 xor ap_const_lv1_1);
    xor_ln340_4_fu_571_p2 <= (tmp_23_fu_537_p3 xor ap_const_lv1_1);
    xor_ln340_5_fu_341_p2 <= (tmp_16_fu_321_p3 xor tmp_15_fu_313_p3);
    xor_ln340_6_fu_397_p2 <= (tmp_18_fu_377_p3 xor tmp_17_fu_369_p3);
    xor_ln340_7_fu_453_p2 <= (tmp_20_fu_433_p3 xor tmp_19_fu_425_p3);
    xor_ln340_8_fu_509_p2 <= (tmp_22_fu_489_p3 xor tmp_21_fu_481_p3);
    xor_ln340_9_fu_565_p2 <= (tmp_24_fu_545_p3 xor tmp_23_fu_537_p3);
    xor_ln340_fu_347_p2 <= (tmp_15_fu_313_p3 xor ap_const_lv1_1);
    xor_ln416_1_fu_1535_p2 <= (tmp_40_fu_1527_p3 xor ap_const_lv1_1);
    xor_ln416_2_fu_1703_p2 <= (tmp_46_fu_1695_p3 xor ap_const_lv1_1);
    xor_ln416_3_fu_1871_p2 <= (tmp_52_fu_1863_p3 xor ap_const_lv1_1);
    xor_ln416_4_fu_2039_p2 <= (tmp_58_fu_2031_p3 xor ap_const_lv1_1);
    xor_ln416_fu_1367_p2 <= (tmp_34_fu_1359_p3 xor ap_const_lv1_1);
    xor_ln779_1_fu_1568_p2 <= (tmp_42_fu_1561_p3 xor ap_const_lv1_1);
    xor_ln779_2_fu_1736_p2 <= (tmp_48_fu_1729_p3 xor ap_const_lv1_1);
    xor_ln779_3_fu_1904_p2 <= (tmp_54_fu_1897_p3 xor ap_const_lv1_1);
    xor_ln779_4_fu_2072_p2 <= (tmp_60_fu_2065_p3 xor ap_const_lv1_1);
    xor_ln779_fu_1400_p2 <= (tmp_36_fu_1393_p3 xor ap_const_lv1_1);
    xor_ln785_1_fu_1435_p2 <= (tmp_31_reg_2331 xor ap_const_lv1_1);
    xor_ln785_2_fu_1591_p2 <= (select_ln777_1_fu_1555_p3 xor ap_const_lv1_1);
    xor_ln785_3_fu_1603_p2 <= (tmp_37_reg_2370 xor ap_const_lv1_1);
    xor_ln785_4_fu_1759_p2 <= (select_ln777_2_fu_1723_p3 xor ap_const_lv1_1);
    xor_ln785_5_fu_1771_p2 <= (tmp_43_reg_2409 xor ap_const_lv1_1);
    xor_ln785_6_fu_1927_p2 <= (select_ln777_3_fu_1891_p3 xor ap_const_lv1_1);
    xor_ln785_7_fu_1939_p2 <= (tmp_49_reg_2448 xor ap_const_lv1_1);
    xor_ln785_8_fu_2095_p2 <= (select_ln777_4_fu_2059_p3 xor ap_const_lv1_1);
    xor_ln785_9_fu_2107_p2 <= (tmp_55_reg_2487 xor ap_const_lv1_1);
    xor_ln785_fu_1423_p2 <= (select_ln777_fu_1387_p3 xor ap_const_lv1_1);
    xor_ln786_10_fu_1962_p2 <= (or_ln786_3_fu_1956_p2 xor ap_const_lv1_1);
    xor_ln786_11_fu_2130_p2 <= (or_ln786_4_fu_2124_p2 xor ap_const_lv1_1);
    xor_ln786_1_fu_385_p2 <= (tmp_18_fu_377_p3 xor ap_const_lv1_1);
    xor_ln786_2_fu_441_p2 <= (tmp_20_fu_433_p3 xor ap_const_lv1_1);
    xor_ln786_3_fu_497_p2 <= (tmp_22_fu_489_p3 xor ap_const_lv1_1);
    xor_ln786_4_fu_553_p2 <= (tmp_24_fu_545_p3 xor ap_const_lv1_1);
    xor_ln786_5_fu_869_p2 <= (p_Result_16_fu_861_p3 xor ap_const_lv1_1);
    xor_ln786_6_fu_961_p2 <= (p_Result_18_fu_953_p3 xor ap_const_lv1_1);
    xor_ln786_7_fu_1458_p2 <= (or_ln786_fu_1452_p2 xor ap_const_lv1_1);
    xor_ln786_8_fu_1626_p2 <= (or_ln786_1_fu_1620_p2 xor ap_const_lv1_1);
    xor_ln786_9_fu_1794_p2 <= (or_ln786_2_fu_1788_p2 xor ap_const_lv1_1);
    xor_ln786_fu_329_p2 <= (tmp_16_fu_321_p3 xor ap_const_lv1_1);
    y_V_1_fu_643_p3 <= 
        select_ln340_2_fu_627_p3 when (or_ln340_1_fu_409_p2(0) = '1') else 
        select_ln388_1_fu_635_p3;
    y_V_2_fu_677_p3 <= 
        select_ln340_4_fu_661_p3 when (or_ln340_2_fu_465_p2(0) = '1') else 
        select_ln388_2_fu_669_p3;
    y_V_3_fu_711_p3 <= 
        select_ln340_11_fu_695_p3 when (or_ln340_3_fu_521_p2(0) = '1') else 
        select_ln388_3_fu_703_p3;
    y_V_4_fu_745_p3 <= 
        select_ln340_13_fu_729_p3 when (or_ln340_4_fu_577_p2(0) = '1') else 
        select_ln388_4_fu_737_p3;
    y_V_5_fu_1017_p3 <= 
        select_ln340_19_fu_1001_p3 when (or_ln340_6_fu_985_p2(0) = '1') else 
        select_ln388_11_fu_1009_p3;
    y_V_fu_609_p3 <= 
        select_ln340_fu_593_p3 when (or_ln340_fu_353_p2(0) = '1') else 
        select_ln388_fu_601_p3;
    zext_ln255_1_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_1_reg_2244),64));
    zext_ln255_2_fu_761_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_2_reg_2249),64));
    zext_ln255_3_fu_765_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_3_reg_2254),64));
    zext_ln255_4_fu_769_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_4_reg_2259_pp0_iter1_reg),64));
    zext_ln255_fu_753_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_reg_2239),64));
    zext_ln265_fu_1025_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_5_fu_1017_p3),64));
    zext_ln415_1_fu_1519_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_39_reg_2381),16));
    zext_ln415_2_fu_1687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_45_reg_2420),16));
    zext_ln415_3_fu_1855_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_51_reg_2459),16));
    zext_ln415_4_fu_2023_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_57_reg_2498),16));
    zext_ln415_fu_1351_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_reg_2342),16));
end behav;
